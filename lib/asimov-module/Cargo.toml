[package]
name = "asimov-module"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
description.workspace = true
#documentation.workspace = true
readme.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
categories = ["api-bindings", "development-tools"]
publish.workspace = true

[features]
default = ["all", "std"]
all = ["cli", "installer", "tracing", "serde"]
cli = ["std", "dep:clientele", "clientele?/clap"]
installer = ["dep:reqwest", "dep:thiserror", "dep:tokio", "serde", "std"]
serde = ["dep:serde", "dep:serde_json", "dep:serde_yml"]
std = [
	"dep:asimov-env",
	"dep:getenv",
	"dep:thiserror",
	"clientele?/std",
	"dogma/std",
	"getenv?/std",
	"serde?/std",
	"serde_json?/std",
	"slab/std",
	"tracing?/std",
	"tracing-subscriber?/fmt",
	"tracing-subscriber?/std",
	"url/std",
]
tracing = ["dep:tracing", "dep:tracing-subscriber", "clientele?/tracing"]
unstable = []
serde_json = ["dep:serde_json"]

[dependencies]
asimov-env = { workspace = true, optional = true }
clientele = { workspace = true, features = [
	"argfile",
	"dotenv",
	"wild",
], optional = true }
dogma.workspace = true
getenv = { workspace = true, optional = true }
reqwest = { version = "0.12", default-features = false, optional = true, features = [
	"json",
	"rustls-tls",
	"rustls-tls-native-roots",
] }
secrecy.workspace = true
serde = { version = "1.0", optional = true, default-features = false, features = [
	"alloc",
	"derive",
] }
serde_json = { version = "1.0", default-features = false, optional = true, features = [
	"alloc",
] }
serde_yml = { version = "0.0.12", default-features = false, optional = true }
slab = { version = "0.4.10", default-features = false }
thiserror = { workspace = true, optional = true }
tokio = { workspace = true, optional = true, features = ["fs"] }
tracing = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
url = { version = "2.5", default-features = false }
